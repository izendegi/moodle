{
  "version": 3,
  "file": "gateways_modal.min.js",
  "sources": ["../src/gateways_modal.js"],
  "sourcesContent": [
    "/* eslint-disable no-tabs */\n/**\n * This module is responsible for Mucommerce content in the gateways modal.\n *\n * @module     paygw_mucommerce/gateway_modal\n * @copyright  2023 Onenpro <info@onenpro.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Repository from './repository';\nimport Templates from 'core/templates';\nimport Modal from 'core/modal';\nimport ModalEvents from 'core/modal_events';\nimport ModalSaveCancel from 'core/modal_save_cancel';\nimport Notification from 'core/notification';\nimport * as Str from 'core/str';\n\n/**\n * Creates and shows a modal that contains a placeholder.\n *\n * @returns {Promise<Modal>}\n */\nconst showModalWithPlaceholder = async () => await Modal.create({\n\tbody: await Templates.render('paygw_mucommerce/mucommerce_button_placeholder', {}),\n\tshow: true,\n\tremoveOnClose: true,\n});\n\n/**\n * Creates and shows a modal.\n *\n * @param {string} bodyform form to ask for required user data to make the payment\n * @returns {Promise<Modal>}\n */\nconst showEditRequiredPersonalDataModal = async (bodyform) => await ModalSaveCancel.create({\n\tlarge: true,\n\ttitle: Str.get_string('userdataformtitle', 'paygw_mucommerce'),\n\tbody: bodyform,\n\tbuttons: {\n\t\tsave: Str.get_string('userdataformsavebtn', 'paygw_mucommerce'),\n\t},\n\tremoveOnClose: true,\n\tshow: true,\n});\n\n/**\n * Process the payment.\n *\n * @param {string} component Name of the component that the itemId belongs to\n * @param {string} paymentArea The area of the component that the itemId belongs to\n * @param {number} itemId An internal identifier that is used by the component\n * @returns {Promise<string>}\n */\nexport const process = (component, paymentArea, itemId) => {\n\treturn Promise.resolve(showModalWithPlaceholder())\n\t\t.then(modal => {\n\t\t\tmodal.getRoot().on(ModalEvents.hidden, () => {\n\t\t\t\t// Destroy when hidden.\n\t\t\t\tmodal.destroy();\n\t\t\t});\n\n\t\t\tlet body = document.getElementsByTagName('body')[0];\n\t\t\tlet crsId = null;\n\t\t\tlet bdClassList = null;\n\t\t\tif (body !== null && typeof body !== 'undefined') {\n\t\t\t\tbdClassList = body.classList;\n\t\t\t\tbdClassList.forEach(\n\t\t\t\t\tfunction(classItem) {\n\t\t\t\t\t\tif (classItem.startsWith('course-')) {\n\t\t\t\t\t\t\tcrsId = classItem.split('course-')[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (crsId !== null && typeof crsId !== 'undefined') {\n\t\t\t\t\tlet courseId = parseInt(crsId);\n\t\t\t\t\treturn Promise.all([modal, askForDataToUser(modal), courseId]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmodal.hide();\n\t\t\treturn Promise.reject('courseid is missing');\n\t\t})\n\t\t.then(([modal, resSavedData, courseId]) => {\n\t\t\treturn checkSaveBllingDataResult(component, paymentArea, itemId, modal, resSavedData, courseId);\n\t\t});\n};\n\nconst checkSaveBllingDataResult = (component, paymentArea, itemId, modal, resSavedData, courseId) => {\n\tif (resSavedData.success) {\n\t\treturn Promise.all([modal, getMucommercePaymentUrl(component, paymentArea, itemId, courseId)])\n\t\t\t.then(([modal, resUrl]) => {\n\t\t\t\tif (resUrl.success) {\n\t\t\t\t\tif (resUrl.url !== 'undefined' && resUrl.url !== '') {\n\t\t\t\t\t\tlocation.href = resUrl.url;\n\t\t\t\t\t\treturn new Promise(() => null);\n\t\t\t\t\t}\n\t\t\t\t\tmodal.hide();\n\t\t\t\t\treturn Promise.resolve(resUrl.message);\n\t\t\t\t} else {\n\t\t\t\t\tif (resUrl.form !== 'undefined' && resUrl.form !== '') {\n\t\t\t\t\t\treturn Promise.all([modal, openEditBillingInfoModal(modal, resUrl.form), courseId])\n\t\t\t\t\t\t\t.then(([modal, resSavedData, courseId]) => {\n\t\t\t\t\t\t\t\treturn checkSaveBllingDataResult(component, paymentArea, itemId, modal, resSavedData, courseId);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmodal.hide();\n\t\t\t\t\t\treturn Promise.reject(resUrl.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t} else {\n\t\treturn Promise.reject(resSavedData.message);\n\t}\n};\n\nconst getMucommercePaymentUrl = (component, paymentArea, itemId, courseId) => {\n\treturn new Promise(resolve => {\n\t\tRepository.getPaymentUrl(component, paymentArea, itemId, courseId)\n\t\t\t.then(res => {\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.then(resolve);\n\t});\n};\n\nconst saveUserData = (modalEditRequiredPersonalData) => {\n\treturn new Promise(savedUserDataResult => {\n\t\tmodalEditRequiredPersonalData.getRoot().find('form').find('.msg-generic')[0].style.display = 'none';\n\t\tRepository.saveRequiredUserData(\n\t\t\tmodalEditRequiredPersonalData.getRoot().find('form').serialize())\n\t\t\t.then(savedres => {\n\t\t\t\tif (savedres.success) {\n\t\t\t\t\tmodalEditRequiredPersonalData.hide();\n\t\t\t\t\treturn savedres;\n\t\t\t\t} else {\n\t\t\t\t\tif (savedres.form != null) {\n\t\t\t\t\t\tmodalEditRequiredPersonalData.setBody(savedres.form);\n\t\t\t\t\t\taddModalEditBillingDataChangeABillingddressListener(modalEditRequiredPersonalData);\n\t\t\t\t\t\tcheckIfNeedToDisplayBilligInfo(modalEditRequiredPersonalData);\n\t\t\t\t\t\tsavedres.reject();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmodalEditRequiredPersonalData.getRoot().find('form').find('.msg-generic').find('.msg-error')\n\t\t\t\t\t\t\t.text(savedres.message);\n\t\t\t\t\t\tmodalEditRequiredPersonalData.getRoot().find('form').find('.msg-generic')[0].style.display = 'block';\n\t\t\t\t\t\taddModalEditBillingDataChangeABillingddressListener(modalEditRequiredPersonalData);\n\t\t\t\t\t\tcheckIfNeedToDisplayBilligInfo(modalEditRequiredPersonalData);\n\t\t\t\t\t\tsavedres.reject();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(savedUserDataResult);\n\t});\n};\n\nconst askForDataToUser = (parentmodal) => {\n\treturn new Promise(editBillingDataForm => {\n\t\tRepository.getEditBillingDataForm()\n\t\t\t.then(resultBillForm => {\n\t\t\t\tif (resultBillForm.success) {\n\t\t\t\t\tif (resultBillForm.form) {\n\t\t\t\t\t\treturn openEditBillingInfoModal(parentmodal, resultBillForm.form);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn resultBillForm;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn resultBillForm;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(editBillingDataForm);\n\t});\n};\n\nconst openEditBillingInfoModal = (parentmodal, form) => {\n\treturn new Promise(saveBillingDataResult => {\n\t\tshowEditRequiredPersonalDataModal(form)\n\t\t\t.then(modalEditBillingData => {\n\t\t\t\treturn new Promise(result => {\n\t\t\t\t\tmodalEditBillingData.getRoot().on(ModalEvents.save, e => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tif (!modalEditBillingData.getRoot().find('input[name=changeinvoiceaddress][type=checkbox]')[0].checked) {\n\t\t\t\t\t\t\tfillBillingWithStudentData(modalEditBillingData);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsaveUserData(modalEditBillingData)\n\t\t\t\t\t\t\t.then(result)\n\t\t\t\t\t\t\t.catch(Notification.exception);\n\t\t\t\t\t});\n\n\t\t\t\t\tmodalEditBillingData.getRoot().on(ModalEvents.hidden, () => {\n\t\t\t\t\t\tmodalEditBillingData.destroy();\n\t\t\t\t\t\tcif = name = address = city = cp = email = phone = null;\n\t\t\t\t\t\tparentmodal.hide();\n\t\t\t\t\t});\n\n\t\t\t\t\taddModalEditBillingDataChangeABillingddressListener(modalEditBillingData);\n\t\t\t\t\tcheckIfNeedToDisplayBilligInfo(modalEditBillingData);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(saveBillingDataResult)\n\t\t\t.catch(Notification.exception);\n\t});\n};\n\nconst fillBillingWithStudentData = (modalEditBillingData) => {\n\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_CIF')[0].value = modalEditBillingData.getRoot().find('#id_profile_field_DNI')[0].value;\n\tlet stdLastname = modalEditBillingData.getRoot().find('#id_lastname')[0].value;\n\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_NAME')[0].value = modalEditBillingData.getRoot().find('#id_firstname')[0].value + (stdLastname != null && stdLastname !== '' && typeof stdLastname !== 'undefined' ? stdLastname : '');\n\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_ADDRESS')[0].value = modalEditBillingData.getRoot().find('#id_address')[0].value;\n\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_CITY')[0].value = modalEditBillingData.getRoot().find('#id_city')[0].value;\n\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_CP')[0].value = modalEditBillingData.getRoot().find('#id_profile_field_CP')[0].value;\n\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_EMAIL')[0].value = modalEditBillingData.getRoot().find('#id_email')[0].value;\n\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_PHONE')[0].value = modalEditBillingData.getRoot().find('#id_phone2')[0].value;\n};\n\nconst clearBillingData = (modalEditBillingData) => {\n\tlet billingInputs = modalEditBillingData.getRoot().find('#id_billinghdrcontainer input');\n\n\tif (billingInputs != null && typeof billingInputs !== 'undefined' && billingInputs.length > 0) {\n\t\tfor (let i = 0; i < billingInputs.length; i++) {\n\t\t\tbillingInputs[i].value = '';\n\t\t}\n\t}\n};\n\nconst addModalEditBillingDataChangeABillingddressListener = (modalEditBillingData) => {\n\tmodalEditBillingData.getRoot().find('input[name=changeinvoiceaddress][type=checkbox]')[0].addEventListener('change', event => {\n\t\tif (event.target.checked) {\n\t\t\tif (cif === null || typeof cif === 'undefined') {\n\t\t\t\tcif = modalEditBillingData.getRoot().find('#id_profile_field_BILLING_CIF')[0].value;\n\t\t\t}\n\t\t\tif (name === null || typeof name === 'undefined') {\n\t\t\t\tname = modalEditBillingData.getRoot().find('#id_profile_field_BILLING_NAME')[0].value;\n\t\t\t}\n\t\t\tif (address === null || typeof address === 'undefined') {\n\t\t\t\taddress = modalEditBillingData.getRoot().find('#id_profile_field_BILLING_ADDRESS')[0].value;\n\t\t\t}\n\t\t\tif (city === null || typeof city === 'undefined') {\n\t\t\t\tcity = modalEditBillingData.getRoot().find('#id_profile_field_BILLING_CITY')[0].value;\n\t\t\t}\n\t\t\tif (cp === null || typeof cp === 'undefined') {\n\t\t\t\tcp = modalEditBillingData.getRoot().find('#id_profile_field_BILLING_CP')[0].value;\n\t\t\t}\n\t\t\tif (email === null || typeof email === 'undefined') {\n\t\t\t\temail = modalEditBillingData.getRoot().find('#id_profile_field_BILLING_EMAIL')[0].value;\n\t\t\t}\n\t\t\tif (phone === null || typeof phone === 'undefined') {\n\t\t\t\tphone = modalEditBillingData.getRoot().find('#id_profile_field_BILLING_PHONE')[0].value;\n\t\t\t}\n\n\t\t\tif (cif !== null && typeof cif !== 'undefined' && cif !== '' ||\n\t\t\t\tname !== null && typeof name !== 'undefined' && name !== '' ||\n\t\t\t\taddress !== null && typeof address !== 'undefined' && address !== '' ||\n\t\t\t\tcity !== null && typeof city !== 'undefined' && city !== '' ||\n\t\t\t\tcp !== null && typeof cp !== 'undefined' && cp !== '' ||\n\t\t\t\temail !== null && typeof email !== 'undefined' && email !== '' ||\n\t\t\t\tphone !== null && typeof phone !== 'undefined' && phone !== '') {\n\t\t\t\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_CIF')[0].value = cif;\n\t\t\t\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_NAME')[0].value = name;\n\t\t\t\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_ADDRESS')[0].value = address;\n\t\t\t\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_CITY')[0].value = city;\n\t\t\t\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_CP')[0].value = cp;\n\t\t\t\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_EMAIL')[0].value = email;\n\t\t\t\tmodalEditBillingData.getRoot().find('#id_profile_field_BILLING_PHONE')[0].value = phone;\n\t\t\t\tmodalEditBillingData.getRoot().find('#id_billinghdr')[0].classList.add('display-elm');\n\t\t\t} else {\n\t\t\t\tfillBillingWithStudentData(modalEditBillingData);\n\t\t\t}\n\t\t} else {\n\t\t\tmodalEditBillingData.getRoot().find('#id_billinghdr')[0].classList.remove('display-elm');\n\t\t\tclearBillingData(modalEditBillingData);\n\t\t}\n\t});\n};\n\nconst checkIfNeedToDisplayBilligInfo = (modalEditBillingData) => {\n\tif (modalEditBillingData.getRoot().find('input[name=changeinvoiceaddress][type=checkbox]')[0].checked) {\n\t\tmodalEditBillingData.getRoot().find('#id_billinghdr')[0].classList.add('display-elm');\n\t}\n};\n\nlet cif, name, address, city, cp, email, phone;\n"
  ],
  "names": [],
  "mappings": "..."
}