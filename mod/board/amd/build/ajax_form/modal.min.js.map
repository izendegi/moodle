{"version":3,"file":"modal.min.js","sources":["../../src/ajax_form/modal.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * A helper for embedding of ajax forms in modal dialogs.\n *\n * This code is based on lib/form/amd/src/modalform.js\n *\n * @module     mod_board/ajax_form/modal\n * @copyright  2025 Petr Skoda\n * @license    https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n **/\n\nimport $ from 'jquery';\nimport Modal from 'core/modal';\nimport Fragment from 'core/fragment';\nimport * as Notification from 'core/notification';\nimport * as FormEvents from 'core_form/events';\nimport * as FormChangeChecker from 'core_form/changechecker';\nimport Pending from 'core/pending';\n\nconst SELECTORS = {\n    CANCEL_BUTTON: '[data-action=\"cancel\"]',\n    SUBMIT_BUTTON: '[data-action=\"submit\"]',\n    SUBMITTING_ICON_CONTAINER: '[data-region=\"submitting-icon-container\"]',\n};\n\nconst STATUSES = {\n    CANCELLED: 'cancelled',\n    RENDER: 'render',\n    SUBMITTED: 'submitted',\n};\n\nconst ACTIONS = {\n    NOTHING: 'nothing',\n    REDIRECT: 'redirect',\n    RELOAD: 'reload',\n};\n\n/**\n * @class mod_board/ajax_form/modal\n * @extends module:core/modal\n */\nexport default class AjaxFormModal extends Modal {\n    static TYPE = 'mod_board-ajax_form_modal';\n    static TEMPLATE = 'mod_board/ajax_form/modal';\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {HTMLElement} root The root jQuery element for the modal\n     */\n    constructor(root) {\n        super(root);\n\n        this.reloadingForm = false;\n        this.formUrl = null;\n        this.formSubmittedAction = null;\n\n        this.submitButton = this.getFooter().find(SELECTORS.SUBMIT_BUTTON);\n        this.cancelButton = this.getFooter().find(SELECTORS.CANCEL_BUTTON);\n        this.submittingContainer = this.getFooter().find(SELECTORS.SUBMITTING_ICON_CONTAINER);\n    }\n\n    /**\n     * Configure the modal ajax form.\n     *\n     * @param {ModalConfig} modalConfig Modal configuration options\n     */\n    configure(modalConfig) {\n        this.formUrl = modalConfig.formUrl;\n        this.formSubmittedAction = modalConfig.formSubmittedAction;\n\n        modalConfig.show = false;\n        modalConfig.removeOnClose = true;\n\n        super.configure(modalConfig);\n\n        if (modalConfig.formSize === 'lg' || modalConfig.formSize === 'xl') {\n            this.getModal().addClass(`modal-${modalConfig.formSize}`);\n        }\n\n        this.show();\n    }\n\n    /**\n     * Register all event listeners.\n     *\n     * @method registerEventListeners\n     */\n    registerEventListeners() {\n        super.registerEventListeners();\n        this.registerCloseOnCancel();\n        this.registerOnSubmit();\n    }\n\n    /**\n     * Register a listener on submit button.\n     *\n     * @method registerOnSubmit\n     */\n    registerOnSubmit() {\n        this.getRoot().on('click', this.getActionSelector('submit'), this.submitFormAjax.bind(this));\n\n        // Do not allow submitting via ENTER key in text field.\n        this.getRoot().on('submit', 'form', (e) => {\n            e.preventDefault();\n        });\n    }\n\n    /**\n     * Set the text of the submit button.\n     *\n     * @method setSubmitButtonText\n     * @param {String} value The button text\n     * @param {String} ariaLabel ARIA label\n     * @returns {Promise}\n     */\n    setSubmitButtonText(value, ariaLabel = '') {\n        this.submitButton.text(value);\n        if (ariaLabel === '') {\n            this.submitButton.removeAttr('aria-label');\n        } else {\n            this.submitButton.attr('aria-label', ariaLabel);\n        }\n    }\n\n    /**\n     * Set the text of the cancel button.\n     *\n     * @method setCancelButtonText\n     * @param {String} value The button text\n     * @param {String} ariaLabel ARIA label\n     * @returns {Promise}\n     */\n    setCancelButtonText(value, ariaLabel = '') {\n        this.cancelButton.text(value);\n        if (ariaLabel === '') {\n            this.cancelButton.removeAttr('aria-label');\n        } else {\n            this.cancelButton.attr('aria-label', ariaLabel);\n        }\n    }\n\n    /**\n     * Returns form element.\n     *\n     * @returns {HTMLFormElement}\n     */\n    getForm() {\n        return this.getRoot().find('form')[0];\n    }\n\n    /**\n     * Validates form.\n     *\n     * @method validateElements\n     * @returns {boolean}\n     */\n    validateElements() {\n        FormEvents.notifyFormSubmittedByJavascript(this.getForm());\n\n        const invalid = this.getRoot().find('[aria-invalid=\"true\"], .error');\n        if (invalid.length) {\n            invalid.first().focus();\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Submit form.\n     *\n     * @method submitFormAjax\n     * @param {Event} e\n     */\n    submitFormAjax(e) {\n        e.preventDefault();\n\n        if (!this.validateElements()) {\n            return;\n        }\n\n        const form = this.getRoot().find('form');\n        const formData = form.serialize();\n\n        FormChangeChecker.resetAllFormDirtyStates();\n\n        this.reloadForm(formData);\n    }\n\n    /**\n     * Reload form and render it.\n     *\n     * @method reloadForm\n     * @param {String} formData\n     * @returns void\n     */\n    reloadForm(formData) {\n        if (this.reloadingForm) {\n            return;\n        }\n        this.reloadingForm = true;\n        const pendingPromise = new Pending('mod_board/modal_ajax_form:reload');\n\n        this.disableSubmitButton();\n\n        const settings = {\n            async: true,\n            data: formData,\n            dataType: 'json',\n            processData: false,\n            timeout: 0,\n            type: 'POST',\n        };\n\n        const renderPromise = $.Deferred();\n        if (formData === '') {\n            this.setBody(renderPromise.promise());\n        } else {\n            this.submittingContainer.removeClass('hidden');\n        }\n\n        $.ajax(this.formUrl, settings)\n            .done((response) => {\n                if (!response) {\n                    throw new Error('Invalid server response');\n                } else if (response.error) {\n                    // Exception in ajax form script.\n                    Notification.exception(response);\n                } else if (response.data?.status) {\n                    if (response.data.status === STATUSES.RENDER) {\n                        if (formData !== '') {\n                            this.setBody(renderPromise.promise());\n                        }\n                        renderPromise.resolve(response.data.html, Fragment.processCollectedJavascript(response.data.javascript));\n                        this.setTitle(response.data.dialogtitle);\n                        this.setSubmitButtonText(response.data.submittext, response.data.submitarialabel ?? '');\n                        this.setCancelButtonText(response.data.canceltext, response.data.cancelarialabel ?? '');\n                        this.submitButton.removeClass('hidden');\n                        this.enableSubmitButton();\n                    } else if (response.data.status === STATUSES.CANCELLED) {\n                        // This should not happen because cancel and close buttons are in JS only.\n                        this.destroy();\n                    } else if (response.data.status === STATUSES.SUBMITTED) {\n                        // Remove the form data, the redirect or callback may take a few moments.\n                        renderPromise.resolve('', '');\n                        if (typeof this.formSubmittedAction === 'function') {\n                            const callback = this.formSubmittedAction;\n                            this.destroy();\n                            callback(response.data.callbackdata);\n                        } else if (this.formSubmittedAction === ACTIONS.RELOAD) {\n                            FormChangeChecker.disableAllChecks();\n                            window.location.reload();\n                        } else if (this.formSubmittedAction === ACTIONS.REDIRECT) {\n                            FormChangeChecker.disableAllChecks();\n                            window.location = response.data.redirecturl;\n                        } else {\n                            // Option ACTIONS.NOTHING does not do anything.\n                            this.destroy();\n                        }\n                    } else {\n                        Notification.exception(new Error('Invalid form data.status value received'));\n                    }\n                } else {\n                    Notification.exception(new Error('Invalid server response'));\n                }\n            })\n            .catch((ex) => {\n                Notification.exception(ex);\n            })\n            .always(() => {\n                pendingPromise.resolve();\n                this.submittingContainer.addClass('hidden');\n                this.reloadingForm = false;\n            });\n    }\n\n    /**\n     * Disable the submit button in the footer.\n     *\n     * @method disableSubmitButton\n     */\n    disableSubmitButton() {\n        this.submitButton.prop('disabled', true);\n    }\n\n    /**\n     * Enable the submit button in the footer.\n     *\n     * @method enableSubmitButton\n     */\n    enableSubmitButton() {\n        this.submitButton.prop('disabled', false);\n    }\n\n    /**\n     * Show modal.\n     *\n     * @method show\n     * @returns {Promise}\n     */\n    show() {\n        this.reloadForm('');\n        return super.show();\n    }\n\n    /**\n     * Hide modal.\n     *\n     * @method hide\n     * @returns void\n     */\n    hide() {\n        // Prevent any interruptions or autosaving.\n        const form = this.getForm();\n        FormEvents.notifyFormSubmittedByJavascript(form, true);\n        FormChangeChecker.resetFormDirtyState(form);\n\n        super.hide();\n    }\n}\n\nAjaxFormModal.registerModalType();\n"],"names":["SELECTORS","STATUSES","ACTIONS","AjaxFormModal","Modal","constructor","root","reloadingForm","formUrl","formSubmittedAction","submitButton","this","getFooter","find","cancelButton","submittingContainer","configure","modalConfig","show","removeOnClose","formSize","getModal","addClass","registerEventListeners","registerCloseOnCancel","registerOnSubmit","getRoot","on","getActionSelector","submitFormAjax","bind","e","preventDefault","setSubmitButtonText","value","ariaLabel","text","removeAttr","attr","setCancelButtonText","getForm","validateElements","FormEvents","notifyFormSubmittedByJavascript","invalid","length","first","focus","formData","serialize","FormChangeChecker","resetAllFormDirtyStates","reloadForm","pendingPromise","Pending","disableSubmitButton","settings","async","data","dataType","processData","timeout","type","renderPromise","$","Deferred","setBody","promise","removeClass","ajax","done","response","Error","error","Notification","exception","_response$data","status","resolve","html","Fragment","processCollectedJavascript","javascript","setTitle","dialogtitle","submittext","submitarialabel","canceltext","cancelarialabel","enableSubmitButton","destroy","callback","callbackdata","disableAllChecks","window","location","reload","redirecturl","catch","ex","always","prop","super","hide","form","resetFormDirtyState","registerModalType"],"mappings":"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"}